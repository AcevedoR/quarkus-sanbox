# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: basic CI/CD to GKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: europe-west1-b
  DEPLOYMENT_NAME: quarkus-sanbox-deployment
  NEW_VERSION: 0.0.1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -B package --file pom.xml

#    - name: Official SonarQube Scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarqube-scan-action@069e3332cbefb8659c02d77b21a04719d3ef7c9b
#      uses: SonarSource/sonarqube-scan-action@v1.0.0
      #with:
        # Additional arguments to the sonar-scanner
        #args: # optional
        # Set the sonar.projectBaseDir analysis property
        #projectBaseDir: # optional, default is .
    - name: Cache 'target' build directory
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: ./target
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

  package-push-and-deploy:
    name: publish and deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Build the Docker image
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: acevedor/quarkus-sanbox:0.0.1
          #tags: acevedor/$PROJECT_ID:$GITHUB_SHA
      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image acevedor/IMAGE_TO_OVERRIDE:TAG=acevedor/quarkus-sanbox:$NEW_VERSION
          ./kustomize build . | kubectl apply -f -
          kubectl rollout restart deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
